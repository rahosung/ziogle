{"version":3,"names":["UploaderPlugin","nanoid","Provider","RequestClient","Socket","emitSocketProgress","getSocketHost","EventManager","ProgressTimeout","RateLimitedQueue","internalRateLimitedQueue","NetworkError","isNetworkError","filterNonFailedFiles","filterFilesToEmitUploadStarted","packageJson","locale","buildResponseError","xhr","err","error","Error","Object","assign","data","request","setTypeInBlob","file","dataWithUpdatedType","slice","size","meta","type","_upload","_classPrivateFieldLooseKey","_requestSocketToken","_uploadBundle","_uploadFiles","_handleUpload","XHRUpload","constructor","uppy","opts","defineProperty","value","_uploadFiles2","_uploadBundle2","_upload2","writable","options","getOptions","Client","remote","providerOptions","provider","client","allowedMetaFields","Array","isArray","keys","res","post","url","body","protocol","endpoint","fieldname","fieldName","metadata","fromEntries","map","name","httpMethod","method","useFormData","formData","headers","token","fileIDs","length","log","limit","files","getFilesByIds","filesFiltered","filesToEmit","emit","bundle","isSomeFileRemote","some","isRemote","TypeError","_classPrivateFieldLooseBase","id","title","defaultLocale","defaultOptions","responseUrlFieldName","timeout","withCredentials","responseType","getResponseData","responseText","parsedResponse","JSON","parse","getResponseError","_","response","validateStatus","status","i18nInit","requests","undefined","uploaderEvents","create","setQueueRequestSocketToken","wrapPromiseFunction","priority","overrides","getState","xhrUpload","addMetadata","forEach","item","subItem","append","createFormDataUpload","formPost","FormData","createBundledUpload","connectToServerSocket","Promise","resolve","reject","serverToken","host","companionUrl","socket","createSocket","target","on","progressData","uploadURL","uploadResp","queuedRequest","done","close","remove","errData","resp","message","cause","run","isPaused","_socket","send","onFileRemove","_socket2","abort","onCancelAll","_temp","reason","_socket3","onRetryRequest","onRetry","onRetryAll","catch","fileID","cb","targetFileID","getFile","eventHandler","_this","arguments","install","capabilities","setState","individualCancellation","addUploader","uninstall","removeUploader","current","total","XMLHttpRequest","timer","i18n","seconds","Math","ceil","upload","addEventListener","ev","loaded","progress","lengthComputable","uploader","bytesUploaded","bytesTotal","open","toUpperCase","currentOpts","header","setRequestHeader","_ref","optsFromState","emitError","_temp2","allSettled","i","parseInt","controller","AbortController","removedHandler","removedFile","uploadPromise","uploadRemoteFile","signal","wrapSyncFunction","off","VERSION","version"],"sources":["index.js"],"sourcesContent":["import UploaderPlugin from '@uppy/core/lib/UploaderPlugin.js'\nimport { nanoid } from 'nanoid/non-secure'\nimport { Provider, RequestClient, Socket } from '@uppy/companion-client'\nimport emitSocketProgress from '@uppy/utils/lib/emitSocketProgress'\nimport getSocketHost from '@uppy/utils/lib/getSocketHost'\nimport EventManager from '@uppy/utils/lib/EventManager'\nimport ProgressTimeout from '@uppy/utils/lib/ProgressTimeout'\nimport { RateLimitedQueue, internalRateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue'\nimport NetworkError from '@uppy/utils/lib/NetworkError'\nimport isNetworkError from '@uppy/utils/lib/isNetworkError'\nimport { filterNonFailedFiles, filterFilesToEmitUploadStarted } from '@uppy/utils/lib/fileFilters'\n\nimport packageJson from '../package.json'\nimport locale from './locale.js'\n\nfunction buildResponseError (xhr, err) {\n  let error = err\n  // No error message\n  if (!error) error = new Error('Upload error')\n  // Got an error message string\n  if (typeof error === 'string') error = new Error(error)\n  // Got something else\n  if (!(error instanceof Error)) {\n    error = Object.assign(new Error('Upload error'), { data: error })\n  }\n\n  if (isNetworkError(xhr)) {\n    error = new NetworkError(error, xhr)\n    return error\n  }\n\n  error.request = xhr\n  return error\n}\n\n/**\n * Set `data.type` in the blob to `file.meta.type`,\n * because we might have detected a more accurate file type in Uppy\n * https://stackoverflow.com/a/50875615\n *\n * @param {object} file File object with `data`, `size` and `meta` properties\n * @returns {object} blob updated with the new `type` set from `file.meta.type`\n */\nfunction setTypeInBlob (file) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type)\n  return dataWithUpdatedType\n}\n\nexport default class XHRUpload extends UploaderPlugin {\n  // eslint-disable-next-line global-require\n  static VERSION = packageJson.version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'uploader'\n    this.id = this.opts.id || 'XHRUpload'\n    this.title = 'XHRUpload'\n\n    this.defaultLocale = locale\n\n    // Default options\n    const defaultOptions = {\n      formData: true,\n      fieldName: opts.bundle ? 'files[]' : 'file',\n      method: 'POST',\n      allowedMetaFields: null,\n      responseUrlFieldName: 'url',\n      bundle: false,\n      headers: {},\n      timeout: 30 * 1000,\n      limit: 5,\n      withCredentials: false,\n      responseType: '',\n      /**\n       * @param {string} responseText the response body string\n       */\n      getResponseData (responseText) {\n        let parsedResponse = {}\n        try {\n          parsedResponse = JSON.parse(responseText)\n        } catch (err) {\n          uppy.log(err)\n        }\n\n        return parsedResponse\n      },\n      /**\n       *\n       * @param {string} _ the response body string\n       * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)\n       */\n      getResponseError (_, response) {\n        let error = new Error('Upload error')\n\n        if (isNetworkError(response)) {\n          error = new NetworkError(error, response)\n        }\n\n        return error\n      },\n      /**\n       * Check if the response from the upload endpoint indicates that the upload was successful.\n       *\n       * @param {number} status the response status code\n       */\n      validateStatus (status) {\n        return status >= 200 && status < 300\n      },\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n    this.i18nInit()\n\n    // Simultaneous upload limiting is shared across all uploads with this plugin.\n    if (internalRateLimitedQueue in this.opts) {\n      this.requests = this.opts[internalRateLimitedQueue]\n    } else {\n      this.requests = new RateLimitedQueue(this.opts.limit)\n    }\n\n    if (this.opts.bundle && !this.opts.formData) {\n      throw new Error('`opts.formData` must be true when `opts.bundle` is enabled.')\n    }\n\n    if (opts?.allowedMetaFields === undefined && 'metaFields' in this.opts) {\n      throw new Error('The `metaFields` option has been renamed to `allowedMetaFields`.')\n    }\n\n    this.uploaderEvents = Object.create(null)\n    this.setQueueRequestSocketToken(this.requests.wrapPromiseFunction(this.#requestSocketToken, { priority: -1 }))\n  }\n\n  getOptions (file) {\n    const overrides = this.uppy.getState().xhrUpload\n    const { headers } = this.opts\n\n    const opts = {\n      ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {},\n    }\n    // Support for `headers` as a function, only in the XHRUpload settings.\n    // Options set by other plugins in Uppy state or on the files themselves are still merged in afterward.\n    //\n    // ```js\n    // headers: (file) => ({ expires: file.meta.expires })\n    // ```\n    if (typeof headers === 'function') {\n      opts.headers = headers(file)\n    } else {\n      Object.assign(opts.headers, this.opts.headers)\n    }\n\n    if (overrides) {\n      Object.assign(opts.headers, overrides.headers)\n    }\n    if (file.xhrUpload) {\n      Object.assign(opts.headers, file.xhrUpload.headers)\n    }\n\n    return opts\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addMetadata (formData, meta, opts) {\n    const allowedMetaFields = Array.isArray(opts.allowedMetaFields)\n      ? opts.allowedMetaFields\n      : Object.keys(meta) // Send along all fields by default.\n\n    allowedMetaFields.forEach((item) => {\n      if (Array.isArray(meta[item])) {\n        // In this case we don't transform `item` to add brackets, it's up to\n        // the user to add the brackets so it won't be overridden.\n        meta[item].forEach(subItem => formData.append(item, subItem))\n      } else {\n        formData.append(item, meta[item])\n      }\n    })\n  }\n\n  createFormDataUpload (file, opts) {\n    const formPost = new FormData()\n\n    this.addMetadata(formPost, file.meta, opts)\n\n    const dataWithUpdatedType = setTypeInBlob(file)\n\n    if (file.name) {\n      formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name)\n    } else {\n      formPost.append(opts.fieldName, dataWithUpdatedType)\n    }\n\n    return formPost\n  }\n\n  createBundledUpload (files, opts) {\n    const formPost = new FormData()\n\n    const { meta } = this.uppy.getState()\n    this.addMetadata(formPost, meta, opts)\n\n    files.forEach((file) => {\n      const options = this.getOptions(file)\n\n      const dataWithUpdatedType = setTypeInBlob(file)\n\n      if (file.name) {\n        formPost.append(options.fieldName, dataWithUpdatedType, file.name)\n      } else {\n        formPost.append(options.fieldName, dataWithUpdatedType)\n      }\n    })\n\n    return formPost\n  }\n\n  async #upload (file, current, total) {\n    const opts = this.getOptions(file)\n\n    this.uppy.log(`uploading ${current} of ${total}`)\n    return new Promise((resolve, reject) => {\n      const data = opts.formData\n        ? this.createFormDataUpload(file, opts)\n        : file.data\n\n      const xhr = new XMLHttpRequest()\n      this.uploaderEvents[file.id] = new EventManager(this.uppy)\n      let queuedRequest\n\n      const timer = new ProgressTimeout(opts.timeout, () => {\n        const error = new Error(this.i18n('uploadStalled', { seconds: Math.ceil(opts.timeout / 1000) }))\n        this.uppy.emit('upload-stalled', error, [file])\n      })\n\n      const id = nanoid()\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log(`[XHRUpload] ${id} started`)\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        this.uppy.log(`[XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`)\n        // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n        timer.progress()\n\n        if (ev.lengthComputable) {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total,\n          })\n        }\n      })\n\n      xhr.addEventListener('load', () => {\n        this.uppy.log(`[XHRUpload] ${id} finished`)\n        timer.done()\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        if (opts.validateStatus(xhr.status, xhr.responseText, xhr)) {\n          const body = opts.getResponseData(xhr.responseText, xhr)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: xhr.status,\n            body,\n            uploadURL,\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n\n          if (uploadURL) {\n            this.uppy.log(`Download ${file.name} from ${uploadURL}`)\n          }\n\n          return resolve(file)\n        }\n        const body = opts.getResponseData(xhr.responseText, xhr)\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n\n        const response = {\n          status: xhr.status,\n          body,\n        }\n\n        this.uppy.emit('upload-error', file, error, response)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        this.uppy.log(`[XHRUpload] ${id} errored`)\n        timer.done()\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n        this.uppy.emit('upload-error', file, error)\n        return reject(error)\n      })\n\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n      xhr.withCredentials = opts.withCredentials\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType\n      }\n\n      queuedRequest = this.requests.run(() => {\n        // When using an authentication system like JWT, the bearer token goes as a header. This\n        // header needs to be fresh each time the token is refreshed so computing and setting the\n        // headers just before the upload starts enables this kind of authentication to work properly.\n        // Otherwise, half-way through the list of uploads the token could be stale and the upload would fail.\n        const currentOpts = this.getOptions(file)\n\n        Object.keys(currentOpts.headers).forEach((header) => {\n          xhr.setRequestHeader(header, currentOpts.headers[header])\n        })\n\n        xhr.send(data)\n\n        return () => {\n          timer.done()\n          xhr.abort()\n        }\n      })\n\n      this.onFileRemove(file.id, () => {\n        queuedRequest.abort()\n        reject(new Error('File removed'))\n      })\n\n      this.onCancelAll(file.id, ({ reason }) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n        }\n        reject(new Error('Upload cancelled'))\n      })\n    })\n  }\n\n  #requestSocketToken = async (file, options) => {\n    const opts = this.getOptions(file)\n    const Client = file.remote.providerOptions.provider ? Provider : RequestClient\n    const client = new Client(this.uppy, file.remote.providerOptions)\n    const allowedMetaFields = Array.isArray(opts.allowedMetaFields)\n      ? opts.allowedMetaFields\n      // Send along all fields by default.\n      : Object.keys(file.meta)\n    const res = await client.post(file.remote.url, {\n      ...file.remote.body,\n      protocol: 'multipart',\n      endpoint: opts.endpoint,\n      size: file.data.size,\n      fieldname: opts.fieldName,\n      metadata: Object.fromEntries(allowedMetaFields.map(name => [name, file.meta[name]])),\n      httpMethod: opts.method,\n      useFormData: opts.formData,\n      headers: typeof opts.headers === 'function' ? opts.headers(file) : opts.headers,\n    }, options)\n    return res.token\n  }\n\n  async connectToServerSocket (file) {\n    return new Promise((resolve, reject) => {\n      const opts = this.getOptions(file)\n      const token = file.serverToken\n      const host = getSocketHost(file.remote.companionUrl)\n      let socket\n\n      const createSocket = () => {\n        if (socket != null) return\n\n        socket = new Socket({ target: `${host}/api/${token}` })\n\n        socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n        socket.on('success', (data) => {\n          const body = opts.getResponseData(data.response.responseText, data.response)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: data.response.status,\n            body,\n            uploadURL,\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n          queuedRequest.done() // eslint-disable-line no-use-before-define\n          socket.close()\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove()\n            this.uploaderEvents[file.id] = null\n          }\n          return resolve()\n        })\n\n        socket.on('error', (errData) => {\n          const resp = errData.response\n          const error = resp\n            ? opts.getResponseError(resp.responseText, resp)\n            : Object.assign(new Error(errData.error.message), { cause: errData.error })\n          this.uppy.emit('upload-error', file, error)\n          queuedRequest.done() // eslint-disable-line no-use-before-define\n          socket.close()\n          if (this.uploaderEvents[file.id]) {\n            this.uploaderEvents[file.id].remove()\n            this.uploaderEvents[file.id] = null\n          }\n          reject(error)\n        })\n      }\n      this.uploaderEvents[file.id] = new EventManager(this.uppy)\n\n      let queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          socket?.send('pause', {})\n        } else {\n          createSocket()\n        }\n\n        return () => {}\n      })\n\n      this.onFileRemove(file.id, () => {\n        socket?.send('cancel', {})\n        socket.close()\n        queuedRequest.abort()\n        resolve(`upload ${file.id} was removed`)\n      })\n\n      this.onCancelAll(file.id, ({ reason } = {}) => {\n        if (reason === 'user') {\n          socket?.send('cancel', {})\n          queuedRequest.abort()\n          // socket.close()\n        }\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      const onRetryRequest = () => {\n        if (socket == null) {\n          queuedRequest.abort()\n        } else {\n          queuedRequest.done()\n        }\n        queuedRequest = this.requests.run(() => {\n          if (socket == null) {\n            createSocket()\n          }\n          return () => {}\n        })\n      }\n      this.onRetry(file.id, onRetryRequest)\n      this.onRetryAll(file.id, onRetryRequest)\n    }).catch((err) => {\n      this.uppy.emit('upload-error', file, err)\n      return Promise.reject(err)\n    })\n  }\n\n  #uploadBundle (files) {\n    return new Promise((resolve, reject) => {\n      const { endpoint } = this.opts\n      const { method } = this.opts\n\n      const optsFromState = this.uppy.getState().xhrUpload\n      const formData = this.createBundledUpload(files, {\n        ...this.opts,\n        ...(optsFromState || {}),\n      })\n\n      const xhr = new XMLHttpRequest()\n\n      const emitError = (error) => {\n        files.forEach((file) => {\n          this.uppy.emit('upload-error', file, error)\n        })\n      }\n\n      const timer = new ProgressTimeout(this.opts.timeout, () => {\n        const error = new Error(this.i18n('uploadStalled', { seconds: Math.ceil(this.opts.timeout / 1000) }))\n        this.uppy.emit('upload-stalled', error, files)\n      })\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log('[XHRUpload] started uploading bundle')\n        timer.progress()\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        timer.progress()\n\n        if (!ev.lengthComputable) return\n\n        files.forEach((file) => {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: (ev.loaded / ev.total) * file.size,\n            bytesTotal: file.size,\n          })\n        })\n      })\n\n      xhr.addEventListener('load', (ev) => {\n        timer.done()\n\n        if (this.opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          const body = this.opts.getResponseData(xhr.responseText, xhr)\n          const uploadResp = {\n            status: ev.target.status,\n            body,\n          }\n          files.forEach((file) => {\n            this.uppy.emit('upload-success', file, uploadResp)\n          })\n          return resolve()\n        }\n\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error')\n        error.request = xhr\n        emitError(error)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        timer.done()\n\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error')\n        emitError(error)\n        return reject(error)\n      })\n\n      this.uppy.on('cancel-all', ({ reason } = {}) => {\n        if (reason !== 'user') return\n        timer.done()\n        xhr.abort()\n      })\n\n      xhr.open(method.toUpperCase(), endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n      xhr.withCredentials = this.opts.withCredentials\n      if (this.opts.responseType !== '') {\n        xhr.responseType = this.opts.responseType\n      }\n\n      Object.keys(this.opts.headers).forEach((header) => {\n        xhr.setRequestHeader(header, this.opts.headers[header])\n      })\n\n      xhr.send(formData)\n    })\n  }\n\n  async #uploadFiles (files) {\n    await Promise.allSettled(files.map((file, i) => {\n      const current = parseInt(i, 10) + 1\n      const total = files.length\n\n      if (file.isRemote) {\n        const controller = new AbortController()\n\n        const removedHandler = (removedFile) => {\n          if (removedFile.id === file.id) controller.abort()\n        }\n        this.uppy.on('file-removed', removedHandler)\n\n        const uploadPromise = this.uploadRemoteFile(file, { signal: controller.signal })\n\n        this.requests.wrapSyncFunction(() => {\n          this.uppy.off('file-removed', removedHandler)\n        }, { priority: -1 })()\n\n        return uploadPromise\n      }\n      return this.#upload(file, current, total)\n    }))\n  }\n\n  onFileRemove (fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', (file) => {\n      if (fileID === file.id) cb(file.id)\n    })\n  }\n\n  onRetry (fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', (targetFileID) => {\n      if (fileID === targetFileID) {\n        cb()\n      }\n    })\n  }\n\n  onRetryAll (fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', () => {\n      if (!this.uppy.getFile(fileID)) return\n      cb()\n    })\n  }\n\n  onCancelAll (fileID, eventHandler) {\n    this.uploaderEvents[fileID].on('cancel-all', (...args) => {\n      if (!this.uppy.getFile(fileID)) return\n      eventHandler(...args)\n    })\n  }\n\n  #handleUpload = async (fileIDs) => {\n    if (fileIDs.length === 0) {\n      this.uppy.log('[XHRUpload] No files to upload!')\n      return\n    }\n\n    // No limit configured by the user, and no RateLimitedQueue passed in by a \"parent\" plugin\n    // (basically just AwsS3) using the internal symbol\n    if (this.opts.limit === 0 && !this.opts[internalRateLimitedQueue]) {\n      this.uppy.log(\n        '[XHRUpload] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/xhr-upload/#limit-0',\n        'warning',\n      )\n    }\n\n    this.uppy.log('[XHRUpload] Uploading...')\n    const files = this.uppy.getFilesByIds(fileIDs)\n\n    const filesFiltered = filterNonFailedFiles(files)\n    const filesToEmit = filterFilesToEmitUploadStarted(filesFiltered)\n    this.uppy.emit('upload-start', filesToEmit)\n\n    if (this.opts.bundle) {\n      // if bundle: true, we don’t support remote uploads\n      const isSomeFileRemote = filesFiltered.some(file => file.isRemote)\n      if (isSomeFileRemote) {\n        throw new Error('Can’t upload remote files when the `bundle: true` option is set')\n      }\n\n      if (typeof this.opts.headers === 'function') {\n        throw new TypeError('`headers` may not be a function when the `bundle: true` option is set')\n      }\n\n      await this.#uploadBundle(filesFiltered)\n    } else {\n      await this.#uploadFiles(filesFiltered)\n    }\n  }\n\n  install () {\n    if (this.opts.bundle) {\n      const { capabilities } = this.uppy.getState()\n      this.uppy.setState({\n        capabilities: {\n          ...capabilities,\n          individualCancellation: false,\n        },\n      })\n    }\n\n    this.uppy.addUploader(this.#handleUpload)\n  }\n\n  uninstall () {\n    if (this.opts.bundle) {\n      const { capabilities } = this.uppy.getState()\n      this.uppy.setState({\n        capabilities: {\n          ...capabilities,\n          individualCancellation: true,\n        },\n      })\n    }\n\n    this.uppy.removeUploader(this.#handleUpload)\n  }\n}\n"],"mappings":"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"}