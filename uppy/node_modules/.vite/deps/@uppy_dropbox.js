import {
  ProviderView
} from "./chunk-O5JLI24S.js";
import {
  UIPlugin_default,
  y
} from "./chunk-T2SQCIH5.js";
import "./chunk-HNIHZSAY.js";
import {
  Provider
} from "./chunk-7MJASB4X.js";
import "./chunk-LRULGENU.js";

// node_modules/@uppy/dropbox/lib/locale.js
var locale_default = {
  strings: {
    pluginNameDropbox: "Dropbox"
  }
};

// node_modules/@uppy/dropbox/lib/Dropbox.js
var packageJson = {
  "version": "3.1.3"
};
var Dropbox = class extends UIPlugin_default {
  constructor(uppy, opts) {
    super(uppy, opts);
    this.id = this.opts.id || "Dropbox";
    Provider.initPlugin(this, opts);
    this.title = this.opts.title || "Dropbox";
    this.icon = () => y("svg", {
      className: "uppy-DashboardTab-iconDropbox",
      "aria-hidden": "true",
      focusable: "false",
      width: "32",
      height: "32",
      viewBox: "0 0 32 32"
    }, y("path", {
      d: "M10.5 7.5L5 10.955l5.5 3.454 5.5-3.454 5.5 3.454 5.5-3.454L21.5 7.5 16 10.955zM10.5 21.319L5 17.864l5.5-3.455 5.5 3.455zM16 17.864l5.5-3.455 5.5 3.455-5.5 3.455zM16 25.925l-5.5-3.455 5.5-3.454 5.5 3.454z",
      fill: "currentcolor",
      fillRule: "nonzero"
    }));
    this.provider = new Provider(uppy, {
      companionUrl: this.opts.companionUrl,
      companionHeaders: this.opts.companionHeaders,
      companionKeysParams: this.opts.companionKeysParams,
      companionCookiesRule: this.opts.companionCookiesRule,
      provider: "dropbox",
      pluginId: this.id
    });
    this.defaultLocale = locale_default;
    this.i18nInit();
    this.title = this.i18n("pluginNameDropbox");
    this.onFirstRender = this.onFirstRender.bind(this);
    this.render = this.render.bind(this);
  }
  install() {
    this.view = new ProviderView(this, {
      provider: this.provider,
      loadAllFiles: true
    });
    const {
      target
    } = this.opts;
    if (target) {
      this.mount(target, this);
    }
  }
  uninstall() {
    this.view.tearDown();
    this.unmount();
  }
  onFirstRender() {
    return Promise.all([this.provider.fetchPreAuthToken(), this.view.getFolder()]);
  }
  render(state) {
    return this.view.render(state);
  }
};
Dropbox.VERSION = packageJson.version;
export {
  Dropbox as default
};
//# sourceMappingURL=@uppy_dropbox.js.map
