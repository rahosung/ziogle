{
  "version": 3,
  "sources": ["../../@uppy/core/lib/UploaderPlugin.js", "../../@uppy/utils/lib/emitSocketProgress.js", "../../@uppy/utils/lib/getSocketHost.js", "../../@uppy/utils/lib/EventManager.js", "../../@uppy/utils/lib/isNetworkError.js", "../../@uppy/utils/lib/RateLimitedQueue.js", "../../@uppy/utils/lib/fileFilters.js"],
  "sourcesContent": ["function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\nimport BasePlugin from './BasePlugin.js';\nvar _queueRequestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"queueRequestSocketToken\");\nexport default class UploaderPlugin extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, _queueRequestSocketToken, {\n      writable: true,\n      value: void 0\n    });\n  }\n  /** @protected */\n  setQueueRequestSocketToken(fn) {\n    _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken] = fn;\n  }\n  async uploadRemoteFile(file, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    // TODO: we could rewrite this to use server-sent events instead of creating WebSockets.\n    try {\n      if (file.serverToken) {\n        return await this.connectToServerSocket(file);\n      }\n      const serverToken = await _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken](file).abortOn(options.signal);\n      if (!this.uppy.getState().files[file.id]) return undefined;\n      this.uppy.setFileState(file.id, {\n        serverToken\n      });\n      return await this.connectToServerSocket(this.uppy.getFile(file.id));\n    } catch (err) {\n      var _err$cause;\n      if ((err == null || (_err$cause = err.cause) == null ? void 0 : _err$cause.name) === 'AbortError') {\n        // The file upload was aborted, itâ€™s not an error\n        return undefined;\n      }\n      this.uppy.setFileState(file.id, {\n        serverToken: undefined\n      });\n      this.uppy.emit('upload-error', file, err);\n      throw err;\n    }\n  }\n}", "import throttle from 'lodash/throttle.js';\nfunction emitSocketProgress(uploader, progressData, file) {\n  const {\n    progress,\n    bytesUploaded,\n    bytesTotal\n  } = progressData;\n  if (progress) {\n    uploader.uppy.log(`Upload progress: ${progress}`);\n    uploader.uppy.emit('upload-progress', file, {\n      uploader,\n      bytesUploaded,\n      bytesTotal\n    });\n  }\n}\nexport default throttle(emitSocketProgress, 300, {\n  leading: true,\n  trailing: true\n});", "export default function getSocketHost(url) {\n  // get the host domain\n  const regex = /^(?:https?:\\/\\/|\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^\\n]+)/i;\n  const host = regex.exec(url)[1];\n  const socketProtocol = /^http:\\/\\//i.test(url) ? 'ws' : 'wss';\n  return `${socketProtocol}://${host}`;\n}", "function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\nvar _emitter = /*#__PURE__*/_classPrivateFieldLooseKey(\"emitter\");\nvar _events = /*#__PURE__*/_classPrivateFieldLooseKey(\"events\");\n/**\n * Create a wrapper around an event emitter with a `remove` method to remove\n * all events that were added using the wrapped emitter.\n */\nexport default class EventManager {\n  constructor(emitter) {\n    Object.defineProperty(this, _emitter, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _events, {\n      writable: true,\n      value: []\n    });\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter] = emitter;\n  }\n  on(event, fn) {\n    _classPrivateFieldLooseBase(this, _events)[_events].push([event, fn]);\n    return _classPrivateFieldLooseBase(this, _emitter)[_emitter].on(event, fn);\n  }\n  remove() {\n    for (const [event, fn] of _classPrivateFieldLooseBase(this, _events)[_events].splice(0)) {\n      _classPrivateFieldLooseBase(this, _emitter)[_emitter].off(event, fn);\n    }\n  }\n}", "function isNetworkError(xhr) {\n  if (!xhr) {\n    return false;\n  }\n  return xhr.readyState !== 0 && xhr.readyState !== 4 || xhr.status === 0;\n}\nexport default isNetworkError;", "function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\nfunction createCancelError(cause) {\n  return new Error('Cancelled', {\n    cause\n  });\n}\nfunction abortOn(signal) {\n  if (signal != null) {\n    var _this$then;\n    const abortPromise = () => this.abort(signal.reason);\n    signal.addEventListener('abort', abortPromise, {\n      once: true\n    });\n    const removeAbortListener = () => {\n      signal.removeEventListener('abort', abortPromise);\n    };\n    (_this$then = this.then) == null ? void 0 : _this$then.call(this, removeAbortListener, removeAbortListener);\n  }\n  return this;\n}\nvar _activeRequests = /*#__PURE__*/_classPrivateFieldLooseKey(\"activeRequests\");\nvar _queuedHandlers = /*#__PURE__*/_classPrivateFieldLooseKey(\"queuedHandlers\");\nvar _paused = /*#__PURE__*/_classPrivateFieldLooseKey(\"paused\");\nvar _pauseTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"pauseTimer\");\nvar _downLimit = /*#__PURE__*/_classPrivateFieldLooseKey(\"downLimit\");\nvar _upperLimit = /*#__PURE__*/_classPrivateFieldLooseKey(\"upperLimit\");\nvar _rateLimitingTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"rateLimitingTimer\");\nvar _call = /*#__PURE__*/_classPrivateFieldLooseKey(\"call\");\nvar _queueNext = /*#__PURE__*/_classPrivateFieldLooseKey(\"queueNext\");\nvar _next = /*#__PURE__*/_classPrivateFieldLooseKey(\"next\");\nvar _queue = /*#__PURE__*/_classPrivateFieldLooseKey(\"queue\");\nvar _dequeue = /*#__PURE__*/_classPrivateFieldLooseKey(\"dequeue\");\nvar _resume = /*#__PURE__*/_classPrivateFieldLooseKey(\"resume\");\nvar _increaseLimit = /*#__PURE__*/_classPrivateFieldLooseKey(\"increaseLimit\");\nexport class RateLimitedQueue {\n  constructor(limit) {\n    Object.defineProperty(this, _dequeue, {\n      value: _dequeue2\n    });\n    Object.defineProperty(this, _queue, {\n      value: _queue2\n    });\n    Object.defineProperty(this, _next, {\n      value: _next2\n    });\n    Object.defineProperty(this, _queueNext, {\n      value: _queueNext2\n    });\n    Object.defineProperty(this, _call, {\n      value: _call2\n    });\n    Object.defineProperty(this, _activeRequests, {\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, _queuedHandlers, {\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, _paused, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _pauseTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _downLimit, {\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, _upperLimit, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _rateLimitingTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _resume, {\n      writable: true,\n      value: () => this.resume()\n    });\n    Object.defineProperty(this, _increaseLimit, {\n      writable: true,\n      value: () => {\n        if (_classPrivateFieldLooseBase(this, _paused)[_paused]) {\n          _classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer] = setTimeout(_classPrivateFieldLooseBase(this, _increaseLimit)[_increaseLimit], 0);\n          return;\n        }\n        _classPrivateFieldLooseBase(this, _downLimit)[_downLimit] = this.limit;\n        this.limit = Math.ceil((_classPrivateFieldLooseBase(this, _upperLimit)[_upperLimit] + _classPrivateFieldLooseBase(this, _downLimit)[_downLimit]) / 2);\n        for (let i = _classPrivateFieldLooseBase(this, _downLimit)[_downLimit]; i <= this.limit; i++) {\n          _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n        }\n        if (_classPrivateFieldLooseBase(this, _upperLimit)[_upperLimit] - _classPrivateFieldLooseBase(this, _downLimit)[_downLimit] > 3) {\n          _classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer] = setTimeout(_classPrivateFieldLooseBase(this, _increaseLimit)[_increaseLimit], 2000);\n        } else {\n          _classPrivateFieldLooseBase(this, _downLimit)[_downLimit] = Math.floor(_classPrivateFieldLooseBase(this, _downLimit)[_downLimit] / 2);\n        }\n      }\n    });\n    if (typeof limit !== 'number' || limit === 0) {\n      this.limit = Infinity;\n    } else {\n      this.limit = limit;\n    }\n  }\n  run(fn, queueOptions) {\n    if (!_classPrivateFieldLooseBase(this, _paused)[_paused] && _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] < this.limit) {\n      return _classPrivateFieldLooseBase(this, _call)[_call](fn);\n    }\n    return _classPrivateFieldLooseBase(this, _queue)[_queue](fn, queueOptions);\n  }\n  wrapSyncFunction(fn, queueOptions) {\n    var _this = this;\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const queuedRequest = _this.run(() => {\n        fn(...args);\n        queueMicrotask(() => queuedRequest.done());\n        return () => {};\n      }, queueOptions);\n      return {\n        abortOn,\n        abort() {\n          queuedRequest.abort();\n        }\n      };\n    };\n  }\n  wrapPromiseFunction(fn, queueOptions) {\n    var _this2 = this;\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      let queuedRequest;\n      const outerPromise = new Promise((resolve, reject) => {\n        queuedRequest = _this2.run(() => {\n          let cancelError;\n          let innerPromise;\n          try {\n            innerPromise = Promise.resolve(fn(...args));\n          } catch (err) {\n            innerPromise = Promise.reject(err);\n          }\n          innerPromise.then(result => {\n            if (cancelError) {\n              reject(cancelError);\n            } else {\n              queuedRequest.done();\n              resolve(result);\n            }\n          }, err => {\n            if (cancelError) {\n              reject(cancelError);\n            } else {\n              queuedRequest.done();\n              reject(err);\n            }\n          });\n          return cause => {\n            cancelError = createCancelError(cause);\n          };\n        }, queueOptions);\n      });\n      outerPromise.abort = cause => {\n        queuedRequest.abort(cause);\n      };\n      outerPromise.abortOn = abortOn;\n      return outerPromise;\n    };\n  }\n  resume() {\n    _classPrivateFieldLooseBase(this, _paused)[_paused] = false;\n    clearTimeout(_classPrivateFieldLooseBase(this, _pauseTimer)[_pauseTimer]);\n    for (let i = 0; i < this.limit; i++) {\n      _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n    }\n  }\n  /**\n   * Freezes the queue for a while or indefinitely.\n   *\n   * @param {number | null } [duration] Duration for the pause to happen, in milliseconds.\n   *                                    If omitted, the queue won't resume automatically.\n   */\n  pause(duration) {\n    if (duration === void 0) {\n      duration = null;\n    }\n    _classPrivateFieldLooseBase(this, _paused)[_paused] = true;\n    clearTimeout(_classPrivateFieldLooseBase(this, _pauseTimer)[_pauseTimer]);\n    if (duration != null) {\n      _classPrivateFieldLooseBase(this, _pauseTimer)[_pauseTimer] = setTimeout(_classPrivateFieldLooseBase(this, _resume)[_resume], duration);\n    }\n  }\n\n  /**\n   * Pauses the queue for a duration, and lower the limit of concurrent requests\n   * when the queue resumes. When the queue resumes, it tries to progressively\n   * increase the limit in `this.#increaseLimit` until another call is made to\n   * `this.rateLimit`.\n   * Call this function when using the RateLimitedQueue for network requests and\n   * the remote server responds with 429 HTTP code.\n   *\n   * @param {number} duration in milliseconds.\n   */\n  rateLimit(duration) {\n    clearTimeout(_classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer]);\n    this.pause(duration);\n    if (this.limit > 1 && Number.isFinite(this.limit)) {\n      _classPrivateFieldLooseBase(this, _upperLimit)[_upperLimit] = this.limit - 1;\n      this.limit = _classPrivateFieldLooseBase(this, _downLimit)[_downLimit];\n      _classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer] = setTimeout(_classPrivateFieldLooseBase(this, _increaseLimit)[_increaseLimit], duration);\n    }\n  }\n  get isPaused() {\n    return _classPrivateFieldLooseBase(this, _paused)[_paused];\n  }\n}\nfunction _call2(fn) {\n  _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] += 1;\n  let done = false;\n  let cancelActive;\n  try {\n    cancelActive = fn();\n  } catch (err) {\n    _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] -= 1;\n    throw err;\n  }\n  return {\n    abort: cause => {\n      if (done) return;\n      done = true;\n      _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] -= 1;\n      cancelActive(cause);\n      _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n    },\n    done: () => {\n      if (done) return;\n      done = true;\n      _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] -= 1;\n      _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n    }\n  };\n}\nfunction _queueNext2() {\n  // Do it soon but not immediately, this allows clearing out the entire queue synchronously\n  // one by one without continuously _advancing_ it (and starting new tasks before immediately\n  // aborting them)\n  queueMicrotask(() => _classPrivateFieldLooseBase(this, _next)[_next]());\n}\nfunction _next2() {\n  if (_classPrivateFieldLooseBase(this, _paused)[_paused] || _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] >= this.limit) {\n    return;\n  }\n  if (_classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].length === 0) {\n    return;\n  }\n\n  // Dispatch the next request, and update the abort/done handlers\n  // so that cancelling it does the Right Thing (and doesn't just try\n  // to dequeue an already-running request).\n  const next = _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].shift();\n  const handler = _classPrivateFieldLooseBase(this, _call)[_call](next.fn);\n  next.abort = handler.abort;\n  next.done = handler.done;\n}\nfunction _queue2(fn, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const handler = {\n    fn,\n    priority: options.priority || 0,\n    abort: () => {\n      _classPrivateFieldLooseBase(this, _dequeue)[_dequeue](handler);\n    },\n    done: () => {\n      throw new Error('Cannot mark a queued request as done: this indicates a bug');\n    }\n  };\n  const index = _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].findIndex(other => {\n    return handler.priority > other.priority;\n  });\n  if (index === -1) {\n    _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].push(handler);\n  } else {\n    _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].splice(index, 0, handler);\n  }\n  return handler;\n}\nfunction _dequeue2(handler) {\n  const index = _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].indexOf(handler);\n  if (index !== -1) {\n    _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].splice(index, 1);\n  }\n}\nexport const internalRateLimitedQueue = Symbol('__queue');", "export function filterNonFailedFiles(files) {\n  const hasError = file => 'error' in file && file.error;\n  return files.filter(file => !hasError(file));\n}\n\n// Don't double-emit upload-started for Golden Retriever-restored files that were already started\nexport function filterFilesToEmitUploadStarted(files) {\n  return files.filter(file => !file.progress.uploadStarted || !file.isRestored);\n}"],
  "mappings": "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",
  "names": ["throttle", "_classPrivateFieldLooseBase", "id", "_classPrivateFieldLooseKey", "_classPrivateFieldLooseBase", "id", "_classPrivateFieldLooseKey"]
}
